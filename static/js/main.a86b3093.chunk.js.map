{"version":3,"sources":["redux/contacts/contacts-actions.js","redux/contacts/contacts-reducers.js","redux/auth/auth-reducers.js","redux/store.js","routes.js","components/Logo/Logo.js","redux/auth/auth-selectors.js","components/Navigation/Navigation.js","components/UserMenu/UserMenu.js","components/AuthNav/AuthNav.js","components/AppBar/AppBar.js","components/PrivateRoute/PrivateRoute.js","components/PublicRoute/PublicRoute.js","App.js","index.js","components/Navigation/Navigation.module.css","components/AuthNav/AuthNav.module.css","redux/auth/auth-operations.js","components/UserMenu/UserMenu.module.css","components/Container/Container.js","redux/auth/auth-actions.js","components/Container/Container.module.css","components/Logo/Logo.module.css","components/AppBar/AppBar.module.css"],"names":["fetchContactsRequest","createAction","fetchContactsSuccess","fetchContactsError","addContactRequest","addContactSuccess","addContactError","deleteContactRequest","deleteContactSuccess","deleteContactError","updateFilter","items","createReducer","_","payload","state","filter","contact","id","logoutSuccess","loading","error","contactsReducer","combineReducers","initialUserState","name","email","user","registerSuccess","loginSuccess","getCurrentUserSuccess","token","registerError","loginError","logoutError","getCurrentUserError","isAuthenticated","getCurrentUserRequest","authReducer","middleware","getDefaultMiddleware","serializableCheck","ignoredActions","FLUSH","REHYDRATE","PAUSE","PERSIST","PURGE","REGISTER","authPersistConfig","key","storage","whitelist","store","configureStore","reducer","contacts","auth","persistReducer","devTools","process","persistor","persistStore","routes","home","register","login","Logo","className","styles","logo","getIsAuthenticated","getUserName","getUserEmail","Navigation","NavLinksList","exact","to","NavLink","activeClassName","defaultProps","connect","StyledChip","withStyles","root","color","Chip","UserMenu","userEmail","onLogout","avatar","Avatar","label","onClick","logoutbutton","mapDispatchToProps","logoutUser","userName","AuthNav","position","Container","AppBar","Component","component","redirectTo","routeProps","render","props","restricted","HomePage","lazy","LoginPage","RegisterPage","ContactsPage","NotFoundPage","App","this","getCurrentUser","fallback","type","height","width","path","ReactDOM","StrictMode","document","getElementById","module","exports","axios","defaults","baseURL","authToken","headers","common","Authorization","registerUser","dispatch","a","registerRequest","post","response","data","message","loginUser","loginRequest","logoutRequest","getState","get","children","container"],"mappings":"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","file":"static/js/main.a86b3093.chunk.js","sourcesContent":["// Imports from Redux Toolkit\r\nimport { createAction } from '@reduxjs/toolkit';\r\n\r\nconst fetchContactsRequest = createAction('contacts/fetchContactsRequest');\r\nconst fetchContactsSuccess = createAction('contacts/fetchContactsSuccess');\r\nconst fetchContactsError = createAction('contacts/fetchContactsError');\r\n\r\nconst addContactRequest = createAction('contacts/addContactRequest');\r\nconst addContactSuccess = createAction('contacts/addContactSuccess');\r\nconst addContactError = createAction('contacts/addContactError');\r\n\r\nconst deleteContactRequest = createAction('contacts/deleteContactRequest');\r\nconst deleteContactSuccess = createAction('contacts/deleteContactSuccess');\r\nconst deleteContactError = createAction('contacts/deleteContactError');\r\n\r\nconst updateFilter = createAction('phonebook/updateFilter');\r\n\r\nexport {\r\n  fetchContactsRequest,\r\n  fetchContactsSuccess,\r\n  fetchContactsError,\r\n  addContactRequest,\r\n  addContactSuccess,\r\n  addContactError,\r\n  deleteContactRequest,\r\n  deleteContactSuccess,\r\n  deleteContactError,\r\n  updateFilter,\r\n};","// Imports from Redux\r\nimport { combineReducers } from 'redux';\r\n// Imports from Redux Toolkit\r\nimport { createReducer } from '@reduxjs/toolkit';\r\n// Imports of actions\r\nimport {\r\n  fetchContactsRequest,\r\n  fetchContactsSuccess,\r\n  fetchContactsError,\r\n  addContactRequest,\r\n  addContactSuccess,\r\n  addContactError,\r\n  deleteContactRequest,\r\n  deleteContactSuccess,\r\n  deleteContactError,\r\n  updateFilter,\r\n} from './contacts-actions';\r\nimport { logoutSuccess } from '../auth/auth-actions';\r\n\r\nconst items = createReducer([], {\r\n  [fetchContactsSuccess]: (_, { payload }) => payload,\r\n  [addContactSuccess]: (state, { payload }) => [payload, ...state],\r\n  [deleteContactSuccess]: (state, { payload }) =>\r\n    state.filter(contact => contact.id !== payload),\r\n  [logoutSuccess]: () => [],\r\n});\r\n\r\nconst filter = createReducer('', {\r\n  [updateFilter]: (_, { payload }) => payload,\r\n});\r\n\r\nconst loading = createReducer(false, {\r\n  [fetchContactsRequest]: () => true,\r\n  [fetchContactsSuccess]: () => false,\r\n  [fetchContactsError]: () => false,\r\n  [addContactRequest]: () => true,\r\n  [addContactSuccess]: () => false,\r\n  [addContactError]: () => false,\r\n  [deleteContactRequest]: () => true,\r\n  [deleteContactSuccess]: () => false,\r\n  [deleteContactError]: () => false,\r\n});\r\n\r\nconst error = createReducer(null, {\r\n  [fetchContactsError]: (_, { payload }) => payload,\r\n  [addContactError]: (_, { payload }) => payload,\r\n  [deleteContactError]: (_, { payload }) => payload,\r\n});\r\n\r\nexport const contactsReducer = combineReducers({\r\n  items,\r\n  filter,\r\n  loading,\r\n  error,\r\n});","import { combineReducers } from 'redux';\r\nimport { createReducer } from '@reduxjs/toolkit';\r\n\r\nimport {\r\n  // registerRequest,\r\n  registerSuccess,\r\n  registerError,\r\n  // loginRequest,\r\n  loginSuccess,\r\n  loginError,\r\n  // logoutRequest,\r\n  logoutSuccess,\r\n  logoutError,\r\n  getCurrentUserRequest,\r\n  getCurrentUserSuccess,\r\n  getCurrentUserError,\r\n} from './auth-actions';\r\n\r\nconst initialUserState = { name: null, email: null };\r\n\r\nconst user = createReducer(initialUserState, {\r\n  [registerSuccess]: (_, { payload }) => payload.user,\r\n  [loginSuccess]: (_, { payload }) => payload.user,\r\n  [logoutSuccess]: () => initialUserState,\r\n  [getCurrentUserSuccess]: (_, { payload }) => payload,\r\n});\r\n\r\nconst token = createReducer(null, {\r\n  [registerSuccess]: (_, { payload }) => payload.token,\r\n  [loginSuccess]: (_, { payload }) => payload.token,\r\n  [logoutSuccess]: () => null,\r\n});\r\n\r\nconst error = createReducer(null, {\r\n  [registerError]: (_, { payload }) => payload,\r\n  [loginError]: (_, { payload }) => payload,\r\n  [logoutError]: (_, { payload }) => payload,\r\n  [getCurrentUserError]: (_, { payload }) => payload,\r\n});\r\n\r\nconst isAuthenticated = createReducer(false, {\r\n  [registerSuccess]: () => true,\r\n  [loginSuccess]: () => true,\r\n  [getCurrentUserRequest]: () => true,\r\n  [getCurrentUserSuccess]: () => true,\r\n  [logoutSuccess]: () => false,\r\n  [registerError]: () => false,\r\n  [loginError]: () => false,\r\n  [getCurrentUserError]: () => false,\r\n});\r\n\r\nexport const authReducer = combineReducers({\r\n  user,\r\n  token,\r\n  isAuthenticated,\r\n  error,\r\n});","// Imports from Redux Toolkit\r\nimport { configureStore, getDefaultMiddleware } from '@reduxjs/toolkit';\r\n// Imports from Redux Persist\r\nimport storage from 'redux-persist/lib/storage';\r\n// Redux Persist fix\r\nimport {\r\n  persistStore,\r\n  persistReducer,\r\n  FLUSH,\r\n  REHYDRATE,\r\n  PAUSE,\r\n  PERSIST,\r\n  PURGE,\r\n  REGISTER,\r\n} from 'redux-persist';\r\n\r\n// Imports of reducers\r\nimport { contactsReducer } from './contacts/contacts-reducers';\r\nimport { authReducer } from './auth/auth-reducers';\r\n\r\nconst middleware = [\r\n  ...getDefaultMiddleware({\r\n    serializableCheck: {\r\n      ignoredActions: [FLUSH, REHYDRATE, PAUSE, PERSIST, PURGE, REGISTER],\r\n    },\r\n  }),\r\n];\r\n\r\nconst authPersistConfig = {\r\n  key: 'token',\r\n  storage,\r\n  whitelist: ['token'],\r\n};\r\n\r\nconst store = configureStore({\r\n  reducer: {\r\n    contacts: contactsReducer,\r\n    auth: persistReducer(authPersistConfig, authReducer),\r\n  },\r\n  middleware,\r\n  devTools: process.env.NODE_ENV !== 'production',\r\n});\r\n\r\nconst persistor = persistStore(store);\r\n\r\nexport { store, persistor };","const routes = {\r\n    home: '/',\r\n    register: '/register',\r\n    login: '/login',\r\n    contacts: '/contacts',\r\n};\r\n  \r\nexport default routes;","import React from 'react';\r\n\r\nimport ImportContactsIcon from '@material-ui/icons/ImportContacts';\r\n\r\nimport styles from './Logo.module.css';\r\n\r\nconst Logo = () => {\r\n  return <ImportContactsIcon className={styles.logo} />;\r\n};\r\n\r\nexport default Logo;","const getIsAuthenticated = state => state.auth.isAuthenticated;\r\n\r\nconst getUserName = state => state.auth.user.name;\r\nconst getUserEmail = state => state.auth.user.email;\r\n\r\nexport { getIsAuthenticated, getUserName, getUserEmail };","// Imports from React\r\nimport React from 'react';\r\nimport { NavLink } from 'react-router-dom';\r\n// Imports of routes\r\nimport routes from '../../routes';\r\n// Imports of components\r\nimport Logo from '../Logo';\r\n// Imports from Redux\r\nimport { connect } from 'react-redux';\r\nimport { getIsAuthenticated } from '../../redux/auth/auth-selectors';\r\n// Imports of helpers\r\nimport PropTypes from 'prop-types';\r\n// Styles imports\r\nimport styles from './Navigation.module.css';\r\n\r\nconst Navigation = ({ isAuthenticated }) => {\r\n  return (\r\n    <nav>\r\n      <ul className={styles.NavLinksList}>\r\n        <li>\r\n          <NavLink exact to={routes.home} className={styles.NavLink}>\r\n            <Logo />\r\n          </NavLink>\r\n        </li>\r\n        <li>\r\n          <NavLink\r\n            exact\r\n            to={routes.home}\r\n            className={styles.NavLink}\r\n            activeClassName={styles['NavLink-active']}\r\n          >\r\n            Home\r\n          </NavLink>\r\n        </li>\r\n        {isAuthenticated && (\r\n          <li>\r\n            <NavLink\r\n              to={routes.contacts}\r\n              className={styles.NavLink}\r\n              activeClassName={styles['NavLink-active']}\r\n            >\r\n              Contacts\r\n            </NavLink>\r\n          </li>\r\n        )}\r\n      </ul>\r\n    </nav>\r\n  );\r\n};\r\n\r\nNavigation.defaultProps = {\r\n  isAuthenticated: false,\r\n};\r\n\r\nNavigation.propTypes = {\r\n  isAuthenticated: PropTypes.bool,\r\n};\r\n\r\nconst mapStateToProps = state => ({\r\n  isAuthenticated: getIsAuthenticated(state),\r\n});\r\n\r\nexport default connect(mapStateToProps)(Navigation);","// Imports from React\r\nimport React from 'react';\r\n// Imports of components\r\nimport Chip from '@material-ui/core/Chip';\r\nimport Avatar from '@material-ui/core/Avatar';\r\nimport ExitToAppIcon from '@material-ui/icons/ExitToApp';\r\n// Imports from Redux\r\nimport { connect } from 'react-redux';\r\nimport { getUserName, getUserEmail } from '../../redux/auth/auth-selectors';\r\nimport { logoutUser } from '../../redux/auth/auth-operations';\r\n// Imports of helpers\r\nimport PropTypes from 'prop-types';\r\nimport { withStyles } from '@material-ui/core/styles';\r\n// Styles imports\r\nimport styles from './UserMenu.module.css';\r\n\r\n// Customization of default Chip component from Matarial-UI\r\nconst StyledChip = withStyles({\r\n  root: {\r\n    'background-color': '#283593',\r\n    color: '#ffffff',\r\n  },\r\n})(Chip);\r\n\r\nconst UserMenu = ({ userEmail, onLogout }) => {\r\n  return (\r\n    <div className={styles.UserMenu}>\r\n      <StyledChip avatar={<Avatar />} label={userEmail} />\r\n      <button onClick={onLogout} className={styles.logoutbutton}>\r\n        <ExitToAppIcon />\r\n      </button>\r\n    </div>\r\n  );\r\n};\r\n\r\nUserMenu.defaultProps = {\r\n  userEmail: null,\r\n};\r\n\r\nUserMenu.propTypes = {\r\n  userEmail: PropTypes.string,\r\n  onLogout: PropTypes.func.isRequired,\r\n};\r\n\r\nconst mapStateToProps = state => ({\r\n  userName: getUserName(state),\r\n  userEmail: getUserEmail(state),\r\n});\r\n\r\nconst mapDispatchToProps = {\r\n  onLogout: logoutUser,\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(UserMenu);","// Imports from React\r\nimport React from 'react';\r\nimport { NavLink } from 'react-router-dom';\r\n// Imports of routes\r\nimport routes from '../../routes';\r\n// Styles imports\r\nimport styles from './AuthNav.module.css';\r\n\r\nconst AuthNav = () => {\r\n  return (\r\n    <ul className={styles.NavLinksList}>\r\n      <li>\r\n        <NavLink\r\n          to={routes.register}\r\n          className={styles.NavLink}\r\n          activeClassName={styles['NavLink-active']}\r\n        >\r\n          Register\r\n        </NavLink>\r\n      </li>\r\n      <li>\r\n        <NavLink\r\n          to={routes.login}\r\n          className={styles.NavLink}\r\n          activeClassName={styles['NavLink-active']}\r\n        >\r\n          Login\r\n        </NavLink>\r\n      </li>\r\n    </ul>\r\n  );\r\n};\r\n\r\nexport default AuthNav;","import React from 'react';\r\nimport { AppBar as PhoneBookBar } from '@material-ui/core';\r\nimport Container from '../Container';\r\nimport Navigation from '../Navigation';\r\nimport UserMenu from '../UserMenu';\r\nimport AuthNav from '../AuthNav';\r\nimport { connect } from 'react-redux';\r\nimport { getIsAuthenticated } from '../../redux/auth/auth-selectors';\r\n\r\nimport styles from './AppBar.module.css';\r\n\r\nconst AppBar = ({ isAuthenticated }) => {\r\n  return (\r\n    <PhoneBookBar position=\"static\">\r\n      <Container>\r\n        <div className={styles.AppBar}>\r\n          <Navigation />\r\n          {isAuthenticated ? <UserMenu /> : <AuthNav />}\r\n        </div>\r\n      </Container>\r\n    </PhoneBookBar>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = state => ({\r\n  isAuthenticated: getIsAuthenticated(state),\r\n});\r\n\r\nexport default connect(mapStateToProps)(AppBar);","import React from 'react';\r\nimport { Route, Redirect } from 'react-router-dom';\r\nimport { connect } from 'react-redux';\r\nimport { getIsAuthenticated } from '../../redux/auth/auth-selectors';\r\n\r\nconst PrivateRoute = ({\r\n  component: Component,\r\n  isAuthenticated,\r\n  redirectTo,\r\n  ...routeProps\r\n}) => (\r\n  <Route\r\n    {...routeProps}\r\n    render={props =>\r\n      isAuthenticated ? <Component {...props} /> : <Redirect to={redirectTo} />\r\n    }\r\n  />\r\n);\r\n\r\nconst mapStateToProps = state => ({\r\n  isAuthenticated: getIsAuthenticated(state),\r\n});\r\n\r\nexport default connect(mapStateToProps)(PrivateRoute);","import React from 'react';\r\nimport { Route, Redirect } from 'react-router-dom';\r\nimport { connect } from 'react-redux';\r\nimport { getIsAuthenticated } from '../../redux/auth/auth-selectors';\r\n\r\nconst PublicRoute = ({\r\n  component: Component,\r\n  isAuthenticated,\r\n  redirectTo,\r\n  ...routeProps\r\n}) => (\r\n  <Route\r\n    {...routeProps}\r\n    render={props =>\r\n      isAuthenticated && routeProps.restricted ? (\r\n        <Redirect to={redirectTo} />\r\n      ) : (\r\n        <Component {...props} />\r\n      )\r\n    }\r\n  />\r\n);\r\n\r\nconst mapStateToProps = state => ({\r\n  isAuthenticated: getIsAuthenticated(state),\r\n});\r\n\r\nexport default connect(mapStateToProps)(PublicRoute);","// React imports\r\nimport React, { Component, Suspense, lazy } from 'react';\r\nimport { Route, Switch } from 'react-router-dom';\r\n\r\n// Components imports\r\nimport AppBar from './components/AppBar';\r\n\r\n// Helpers imports\r\nimport Loader from 'react-loader-spinner';\r\nimport 'react-loader-spinner/dist/loader/css/react-spinner-loader.css';\r\n\r\n// Routes imports\r\nimport routes from './routes';\r\nimport PrivateRoute from './components/PrivateRoute';\r\nimport PublicRoute from './components/PublicRoute';\r\n\r\n// Imports from Redux\r\nimport { connect } from 'react-redux';\r\n\r\n// Operations imports\r\nimport { getCurrentUser } from './redux/auth/auth-operations';\r\n\r\n// Lazy imports for views\r\nconst HomePage = lazy(() =>\r\n  import('./views/HomePage' /* webpackChunkName: \"home-page\" */),\r\n);\r\nconst LoginPage = lazy(() =>\r\n  import('./views/LoginPage' /* webpackChunkName: \"login-page\" */),\r\n);\r\nconst RegisterPage = lazy(() =>\r\n  import('./views/RegisterPage' /* webpackChunkName: \"register-page\" */),\r\n);\r\nconst ContactsPage = lazy(() =>\r\n  import('./views/ContactsPage' /* webpackChunkName: \"contacts-page\" */),\r\n);\r\nconst NotFoundPage = lazy(() =>\r\n  import('./views/NotFoundPage' /* webpackChunkName: \"contacts-page\" */),\r\n);\r\n\r\nclass App extends Component {\r\n  componentDidMount() {\r\n    this.props.getCurrentUser();\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <>\r\n        <Suspense\r\n          fallback={\r\n            <Loader\r\n              type=\"TailSpin\"\r\n              color=\"#80cbc4\"\r\n              height={80}\r\n              width={80}\r\n              className=\"loader\"\r\n            />\r\n          }\r\n        >\r\n          <AppBar />\r\n          <Switch>\r\n            <Route exact path={routes.home} component={HomePage} />\r\n            <PublicRoute\r\n              path={routes.register}\r\n              component={RegisterPage}\r\n              restricted\r\n              redirectTo={routes.home}\r\n            />\r\n            <PublicRoute\r\n              path={routes.login}\r\n              component={LoginPage}\r\n              restricted\r\n              redirectTo={routes.contacts}\r\n            />\r\n            <PrivateRoute\r\n              path={routes.contacts}\r\n              component={ContactsPage}\r\n              redirectTo={routes.login}\r\n            />\r\n            <Route component={NotFoundPage} />\r\n          </Switch>\r\n        </Suspense>\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapDispatchToProps = {\r\n  getCurrentUser,\r\n};\r\nexport default connect(null, mapDispatchToProps)(App);","// Imports from React\r\nimport React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport { BrowserRouter } from 'react-router-dom';\r\n\r\n// Imports from Redux\r\nimport { Provider } from 'react-redux';\r\nimport { store, persistor } from './redux/store';\r\n// Imports from Redux Persist\r\nimport { PersistGate } from 'redux-persist/integration/react';\r\n\r\n// Imports of components\r\nimport App from './App';\r\n\r\n// Styles imports\r\nimport 'modern-normalize/modern-normalize.css';\r\nimport './index.css';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <BrowserRouter>\r\n      <Provider store={store}>\r\n        <PersistGate loading=\"Loading...\" persistor={persistor}>\r\n          <App />\r\n        </PersistGate>\r\n      </Provider>\r\n    </BrowserRouter>\r\n  </React.StrictMode>,\r\n  document.getElementById('root'),\r\n);","// extracted by mini-css-extract-plugin\nmodule.exports = {\"NavLinksList\":\"Navigation_NavLinksList__2dWrz\",\"NavLink\":\"Navigation_NavLink__1P3ga\",\"NavLink-active\":\"Navigation_NavLink-active__2o4Ej\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"NavLinksList\":\"AuthNav_NavLinksList__3Ha2A\",\"NavLink\":\"AuthNav_NavLink__GC-73\",\"NavLink-active\":\"AuthNav_NavLink-active__2UuTL\"};","// Imports of actions\r\nimport {\r\n    registerRequest,\r\n    registerSuccess,\r\n    registerError,\r\n    loginRequest,\r\n    loginSuccess,\r\n    loginError,\r\n    logoutRequest,\r\n    logoutSuccess,\r\n    logoutError,\r\n    getCurrentUserRequest,\r\n    getCurrentUserSuccess,\r\n    getCurrentUserError,\r\n} from './auth-actions';\r\n// Imports of libraries\r\nimport axios from 'axios';\r\naxios.defaults.baseURL = 'https://goit-phonebook-api.herokuapp.com';\r\n  \r\nconst authToken = {\r\n    set(token) {\r\n      axios.defaults.headers.common.Authorization = `Bearer ${token}`;\r\n    },\r\n    unset() {\r\n      axios.defaults.headers.common.Authorization = '';\r\n    },\r\n};\r\n  \r\nconst registerUser = user => async dispatch => {\r\n    dispatch(registerRequest());\r\n  \r\n    try {\r\n      const response = await axios.post('/users/signup', user);\r\n  \r\n      authToken.set(response.data.token);\r\n      dispatch(registerSuccess(response.data));\r\n    } catch (error) {\r\n      dispatch(registerError(error.message));\r\n    }\r\n};\r\n  \r\nconst loginUser = user => async dispatch => {\r\n    dispatch(loginRequest());\r\n  \r\n    try {\r\n      const response = await axios.post('/users/login', user);\r\n  \r\n      authToken.set(response.data.token);\r\n      dispatch(loginSuccess(response.data));\r\n    } catch (error) {\r\n      dispatch(loginError(error.message));\r\n    }\r\n};\r\n  \r\nconst logoutUser = () => async dispatch => {\r\n    dispatch(logoutRequest());\r\n  \r\n    try {\r\n      await axios.post('/users/logout');\r\n      authToken.unset();\r\n      dispatch(logoutSuccess());\r\n    } catch (error) {\r\n      dispatch(logoutError(error.message));\r\n    }\r\n};\r\n  \r\nconst getCurrentUser = () => async (dispatch, getState) => {\r\n    const {\r\n      auth: { token },\r\n    } = getState();\r\n  \r\n    if (!token) {\r\n      return;\r\n    }\r\n  \r\n    authToken.set(token);\r\n    dispatch(getCurrentUserRequest());\r\n  \r\n    try {\r\n      const response = await axios.get('/users/current');\r\n  \r\n      dispatch(getCurrentUserSuccess(response.data));\r\n    } catch (error) {\r\n      dispatch(getCurrentUserError(error.message));\r\n    }\r\n};\r\n  \r\nexport { registerUser, loginUser, logoutUser, getCurrentUser };","// extracted by mini-css-extract-plugin\nmodule.exports = {\"UserMenu\":\"UserMenu_UserMenu__2wzSn\",\"logoutbutton\":\"UserMenu_logoutbutton__1t1C_\"};","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nimport styles from './Container.module.css';\r\n\r\nconst Container = ({ children }) => (\r\n  <div className={styles.container}>{children}</div>\r\n);\r\n\r\nContainer.propTypes = {\r\n  children: PropTypes.node,\r\n};\r\n\r\nexport default Container;","// Imports from Redux Toolkit\r\nimport { createAction } from '@reduxjs/toolkit';\r\n\r\nconst registerRequest = createAction('auth/registerRequest');\r\nconst registerSuccess = createAction('auth/registerSuccess');\r\nconst registerError = createAction('auth/registerError');\r\n\r\nconst loginRequest = createAction('auth/loginRequest');\r\nconst loginSuccess = createAction('auth/loginSuccess');\r\nconst loginError = createAction('auth/loginError');\r\n\r\nconst logoutRequest = createAction('auth/logoutRequest');\r\nconst logoutSuccess = createAction('auth/logoutSuccess');\r\nconst logoutError = createAction('auth/logoutError');\r\n\r\nconst getCurrentUserRequest = createAction('auth/getCurrentUserRequest');\r\nconst getCurrentUserSuccess = createAction('auth/getCurrentUserSuccess');\r\nconst getCurrentUserError = createAction('auth/getCurrentUserError');\r\n\r\nexport {\r\n  registerRequest,\r\n  registerSuccess,\r\n  registerError,\r\n  logoutRequest,\r\n  logoutSuccess,\r\n  logoutError,\r\n  loginRequest,\r\n  loginSuccess,\r\n  loginError,\r\n  getCurrentUserRequest,\r\n  getCurrentUserSuccess,\r\n  getCurrentUserError,\r\n};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Container_container__25dqD\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"logo\":\"Logo_logo__zz1CE\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"AppBar\":\"AppBar_AppBar__XQ_Ba\"};"],"sourceRoot":""}