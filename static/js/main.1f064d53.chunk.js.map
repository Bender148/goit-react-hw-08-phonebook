{"version":3,"sources":["redux/contacts/contacts-reducers.js","redux/auth/auth-reducers.js","redux/store.js","components/Logo/Logo.js","routes.js","redux/auth/auth-selectors.js","components/Navigation/Navigation.js","components/UserMenu/UserMenu.js","components/AuthNav/AuthNav.js","components/AppBar/AppBar.js","components/PrivateRoute/PrivateRoute.js","components/PublicRoute/PublicRoute.js","App.js","index.js","components/Navigation/Navigation.module.css","components/AuthNav/AuthNav.module.css","redux/auth/auth-operations.js","components/UserMenu/UserMenu.module.css","components/Container/Container.js","redux/auth/auth-actions.js","components/Container/Container.module.css","components/Logo/Logo.module.css","components/AppBar/AppBar.module.css","redux/contacts/contacts-actions.js"],"names":["items","createReducer","fetchContactsSuccess","_","payload","addContactSuccess","state","deleteContactSuccess","filter","contact","id","logoutSuccess","updateContactSuccess","map","updateFilter","loading","fetchContactsRequest","fetchContactsError","addContactRequest","addContactError","deleteContactRequest","deleteContactError","updateLoading","updateContactRequest","updateContactError","error","contactsReducer","combineReducers","initialUserState","name","email","user","registerSuccess","loginSuccess","getCurrentUserSuccess","token","registerError","loginError","logoutError","getCurrentUserError","isAuthenticated","getCurrentUserRequest","authReducer","middleware","getDefaultMiddleware","serializableCheck","ignoredActions","FLUSH","REHYDRATE","PAUSE","PERSIST","PURGE","REGISTER","authPersistConfig","key","storage","whitelist","store","configureStore","reducer","contacts","auth","persistReducer","devTools","process","persistor","persistStore","Logo","className","styles","logo","routes","home","register","login","getIsAuthenticated","getUserEmail","Navigation","useSelector","NavLinksList","exact","to","NavLink","activeClassName","StyledChip","withStyles","root","backgroundColor","color","Chip","UserMenu","dispatch","useDispatch","onLogout","useCallback","logoutUser","userEmail","avatar","Avatar","label","onClick","logoutbutton","AuthNav","AppBar","position","Container","PrivateRoute","redirectTo","children","routeProps","PublicRoute","restricted","defaultProps","HomePage","lazy","LoginPage","RegisterPage","ContactsPage","NotFoundPage","App","useEffect","getCurrentUser","basename","fallback","type","height","width","path","ReactDOM","render","StrictMode","document","getElementById","module","exports","axios","defaults","baseURL","authToken","headers","common","Authorization","registerUser","a","registerRequest","post","response","data","message","loginUser","loginRequest","logoutRequest","getState","get","container","createAction"],"mappings":"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","file":"static/js/main.1f064d53.chunk.js","sourcesContent":["// Redux imports\r\nimport { combineReducers } from 'redux';\r\n\r\n// Imports from Redux Toolkit\r\nimport { createReducer } from '@reduxjs/toolkit';\r\n\r\n// Imports of actions\r\nimport {\r\n  fetchContactsRequest,\r\n  fetchContactsSuccess,\r\n  fetchContactsError,\r\n  addContactRequest,\r\n  addContactSuccess,\r\n  addContactError,\r\n  deleteContactRequest,\r\n  deleteContactSuccess,\r\n  deleteContactError,\r\n  updateFilter,\r\n  updateContactRequest,\r\n  updateContactSuccess,\r\n  updateContactError,\r\n} from './contacts-actions';\r\nimport { logoutSuccess } from '../auth/auth-actions';\r\n\r\n// Reducer to handle all contacts\r\nconst items = createReducer([], {\r\n  [fetchContactsSuccess]: (_, { payload }) => payload,\r\n  [addContactSuccess]: (state, { payload }) => [payload, ...state],\r\n  [deleteContactSuccess]: (state, { payload }) =>\r\n    state.filter(contact => contact.id !== payload),\r\n  [logoutSuccess]: () => [],\r\n  [updateContactSuccess]: (state, { payload }) =>\r\n    state.map(contact => (contact.id === payload.id ? payload : contact)),\r\n});\r\n\r\n// Reducer to handle filter value\r\nconst filter = createReducer('', {\r\n  [updateFilter]: (_, { payload }) => payload,\r\n});\r\n\r\n// Reducer to handle loading status\r\nconst loading = createReducer(false, {\r\n  [fetchContactsRequest]: () => true,\r\n  [fetchContactsSuccess]: () => false,\r\n  [fetchContactsError]: () => false,\r\n  [addContactRequest]: () => true,\r\n  [addContactSuccess]: () => false,\r\n  [addContactError]: () => false,\r\n  [deleteContactRequest]: () => true,\r\n  [deleteContactSuccess]: () => false,\r\n  [deleteContactError]: () => false,\r\n});\r\n\r\nconst updateLoading = createReducer(false, {\r\n  [updateContactRequest]: () => true,\r\n  [updateContactSuccess]: () => false,\r\n  [updateContactError]: () => false,\r\n});\r\n\r\n// Reducer to handle error\r\nconst error = createReducer(null, {\r\n  [fetchContactsError]: (_, { payload }) => payload,\r\n  [addContactError]: (_, { payload }) => payload,\r\n  [deleteContactError]: (_, { payload }) => payload,\r\n  [updateContactError]: (_, { payload }) => payload,\r\n});\r\n\r\nexport const contactsReducer = combineReducers({\r\n  items,\r\n  filter,\r\n  loading,\r\n  error,\r\n  updateLoading,\r\n});","// Redux imports\r\nimport { combineReducers } from 'redux';\r\n\r\n// Imports from Redux Toolkit\r\nimport { createReducer } from '@reduxjs/toolkit';\r\n\r\n// Imports of actions\r\nimport {\r\n  // registerRequest,\r\n  registerSuccess,\r\n  registerError,\r\n  // loginRequest,\r\n  loginSuccess,\r\n  loginError,\r\n  // logoutRequest,\r\n  logoutSuccess,\r\n  logoutError,\r\n  getCurrentUserRequest,\r\n  getCurrentUserSuccess,\r\n  getCurrentUserError,\r\n} from './auth-actions';\r\n\r\n// Initial user state\r\nconst initialUserState = { name: null, email: null };\r\n\r\n// Reducer to handle user slice of the state\r\nconst user = createReducer(initialUserState, {\r\n  [registerSuccess]: (_, { payload }) => payload.user,\r\n  [loginSuccess]: (_, { payload }) => payload.user,\r\n  [logoutSuccess]: () => initialUserState,\r\n  [getCurrentUserSuccess]: (_, { payload }) => payload,\r\n});\r\n\r\n// Reducer to handle token slice of the state\r\nconst token = createReducer(null, {\r\n  [registerSuccess]: (_, { payload }) => payload.token,\r\n  [loginSuccess]: (_, { payload }) => payload.token,\r\n  [logoutSuccess]: () => null,\r\n});\r\n\r\n// Reducer to handle error slice of the state\r\nconst error = createReducer(null, {\r\n  [registerError]: (_, { payload }) => payload,\r\n  [loginError]: (_, { payload }) => payload,\r\n  [logoutError]: (_, { payload }) => payload,\r\n  [getCurrentUserError]: (_, { payload }) => payload,\r\n});\r\n\r\n// Reducer to handle authentication status slice of the state\r\nconst isAuthenticated = createReducer(false, {\r\n  [registerSuccess]: () => true,\r\n  [loginSuccess]: () => true,\r\n  [getCurrentUserRequest]: () => true,\r\n  [getCurrentUserSuccess]: () => true,\r\n  [logoutSuccess]: () => false,\r\n  [registerError]: () => false,\r\n  [loginError]: () => false,\r\n  [getCurrentUserError]: () => false,\r\n});\r\n\r\nexport const authReducer = combineReducers({\r\n  user,\r\n  token,\r\n  isAuthenticated,\r\n  error,\r\n});","// Imports from Redux Toolkit\r\nimport { configureStore, getDefaultMiddleware } from '@reduxjs/toolkit';\r\n\r\n// Imports from Redux Persist\r\nimport storage from 'redux-persist/lib/storage';\r\n\r\n// Redux Persist fix\r\nimport {\r\n  persistStore,\r\n  persistReducer,\r\n  FLUSH,\r\n  REHYDRATE,\r\n  PAUSE,\r\n  PERSIST,\r\n  PURGE,\r\n  REGISTER,\r\n} from 'redux-persist';\r\n\r\n// Imports of reducers\r\nimport { contactsReducer } from './contacts/contacts-reducers';\r\nimport { authReducer } from './auth/auth-reducers';\r\n\r\n// Config for middleware\r\nconst middleware = [\r\n  ...getDefaultMiddleware({\r\n    serializableCheck: {\r\n      ignoredActions: [FLUSH, REHYDRATE, PAUSE, PERSIST, PURGE, REGISTER],\r\n    },\r\n  }),\r\n];\r\n\r\n// Config for authorization slice of state to set token to Local Storage\r\nconst authPersistConfig = {\r\n  key: 'token',\r\n  storage,\r\n  whitelist: ['token'],\r\n};\r\n\r\n// Creating and configuring application store\r\nconst store = configureStore({\r\n  reducer: {\r\n    contacts: contactsReducer,\r\n    auth: persistReducer(authPersistConfig, authReducer),\r\n  },\r\n  middleware,\r\n  devTools: process.env.NODE_ENV !== 'production',\r\n});\r\n\r\n// Declaring persistor\r\nconst persistor = persistStore(store);\r\n\r\nexport { store, persistor };","// React imports\r\nimport React from 'react';\r\n\r\n// Component imports\r\nimport ImportContactsIcon from '@material-ui/icons/ImportContacts';\r\n\r\n// Styles imports\r\nimport styles from './Logo.module.css';\r\n\r\nconst Logo = () => {\r\n  return <ImportContactsIcon className={styles.logo} />;\r\n};\r\n\r\nexport default Logo;","const routes = {\r\n    home: '/',\r\n    register: '/register',\r\n    login: '/login',\r\n    contacts: '/contacts',\r\n};\r\n  \r\nexport default routes;","// Selector to get authentication status\r\nconst getIsAuthenticated = state => state.auth.isAuthenticated;\r\n\r\n// // Selectors to get user info\r\nconst getUserName = state => state.auth.user.name;\r\nconst getUserEmail = state => state.auth.user.email;\r\n\r\nexport { getIsAuthenticated, getUserName, getUserEmail };","// React imports\r\nimport React from 'react';\r\nimport { NavLink } from 'react-router-dom';\r\n\r\n// Components imports\r\nimport Logo from '../Logo';\r\n\r\n// Routes imports\r\nimport routes from '../../routes';\r\n\r\n// Imports from Redux\r\nimport { useSelector } from 'react-redux';\r\nimport { getIsAuthenticated } from '../../redux/auth/auth-selectors';\r\n\r\n// Styles imports\r\nimport styles from './Navigation.module.css';\r\n\r\nexport default function Navigation() {\r\n  const isAuthenticated = useSelector(getIsAuthenticated);\r\n\r\n  return (\r\n    <nav>\r\n      <ul className={styles.NavLinksList}>\r\n        <li>\r\n          <NavLink exact to={routes.home} className={styles.NavLink}>\r\n            <Logo />\r\n          </NavLink>\r\n        </li>\r\n        <li>\r\n          <NavLink\r\n            exact\r\n            to={routes.home}\r\n            className={styles.NavLink}\r\n            activeClassName={styles['NavLink-active']}\r\n          >\r\n            Home\r\n          </NavLink>\r\n        </li>\r\n        {isAuthenticated && (\r\n          <li>\r\n            <NavLink\r\n              to={routes.contacts}\r\n              className={styles.NavLink}\r\n              activeClassName={styles['NavLink-active']}\r\n            >\r\n              Contacts\r\n            </NavLink>\r\n          </li>\r\n        )}\r\n      </ul>\r\n    </nav>\r\n  );\r\n}","// Imports from React\r\nimport React, { useCallback } from 'react';\r\n\r\n// Imports of components\r\nimport Chip from '@material-ui/core/Chip';\r\nimport Avatar from '@material-ui/core/Avatar';\r\nimport ExitToAppIcon from '@material-ui/icons/ExitToApp';\r\n\r\n// Imports from Redux\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport { getUserEmail } from '../../redux/auth/auth-selectors';\r\nimport { logoutUser } from '../../redux/auth/auth-operations';\r\n\r\n// Styles imports\r\nimport styles from './UserMenu.module.css';\r\nimport { withStyles } from '@material-ui/core/styles';\r\n\r\n// Customization of default Chip component from Matarial-UI\r\nconst StyledChip = withStyles({\r\n  root: {\r\n    backgroundColor: '#283593',\r\n    color: '#ffffff',\r\n  },\r\n})(Chip);\r\n\r\nexport default function UserMenu() {\r\n  const dispatch = useDispatch();\r\n  const onLogout = useCallback(() => dispatch(logoutUser()), [dispatch]);\r\n  const userEmail = useSelector(getUserEmail);\r\n\r\n  return (\r\n    <div className={styles.UserMenu}>\r\n      <StyledChip avatar={<Avatar />} label={userEmail} />\r\n      <button onClick={onLogout} className={styles.logoutbutton}>\r\n        <ExitToAppIcon />\r\n      </button>\r\n    </div>\r\n  );\r\n}","// React imports\r\nimport React from 'react';\r\nimport { NavLink } from 'react-router-dom';\r\n\r\n// Imports of routes\r\nimport routes from '../../routes';\r\n\r\n// Styles imports\r\nimport styles from './AuthNav.module.css';\r\n\r\nconst AuthNav = () => {\r\n  return (\r\n    <ul className={styles.NavLinksList}>\r\n      <li>\r\n        <NavLink\r\n          to={routes.register}\r\n          className={styles.NavLink}\r\n          activeClassName={styles['NavLink-active']}\r\n        >\r\n          Register\r\n        </NavLink>\r\n      </li>\r\n      <li>\r\n        <NavLink\r\n          to={routes.login}\r\n          className={styles.NavLink}\r\n          activeClassName={styles['NavLink-active']}\r\n        >\r\n          Login\r\n        </NavLink>\r\n      </li>\r\n    </ul>\r\n  );\r\n};\r\n\r\nexport default AuthNav;","// React imports\r\nimport React from 'react';\r\n\r\n// Components imports\r\nimport Container from '../Container';\r\nimport Navigation from '../Navigation';\r\nimport UserMenu from '../UserMenu';\r\nimport AuthNav from '../AuthNav';\r\n\r\n// Imports from Redux\r\nimport { useSelector } from 'react-redux';\r\nimport { getIsAuthenticated } from '../../redux/auth/auth-selectors';\r\n\r\n// Styles imports\r\nimport { AppBar as PhoneBookBar } from '@material-ui/core';\r\nimport styles from './AppBar.module.css';\r\n\r\nexport default function AppBar() {\r\n  const isAuthenticated = useSelector(getIsAuthenticated);\r\n\r\n  return (\r\n    <PhoneBookBar position=\"static\">\r\n      <Container>\r\n        <div className={styles.AppBar}>\r\n          <Navigation />\r\n          {isAuthenticated ? <UserMenu /> : <AuthNav />}\r\n        </div>\r\n      </Container>\r\n    </PhoneBookBar>\r\n  );\r\n}","// React imports\r\nimport React from 'react';\r\nimport { Route, Redirect } from 'react-router-dom';\r\n\r\n// Redux imports\r\nimport { useSelector } from 'react-redux';\r\nimport { getIsAuthenticated } from '../../redux/auth/auth-selectors';\r\n\r\n// Helpers imports\r\nimport PropTypes from 'prop-types';\r\n\r\nexport default function PrivateRoute({ redirectTo, children, ...routeProps }) {\r\n  const isAuthenticated = useSelector(getIsAuthenticated);\r\n\r\n  return (\r\n    <Route {...routeProps}>\r\n      {isAuthenticated ? children : <Redirect to={redirectTo} />}\r\n    </Route>\r\n  );\r\n}\r\n\r\nPrivateRoute.propTypes = {\r\n  redirectTo: PropTypes.string.isRequired,\r\n  children: PropTypes.node,\r\n  routeProps: PropTypes.shape({\r\n    path: PropTypes.string.isRequired,\r\n  }),\r\n};","// React imports\r\nimport React from 'react';\r\nimport { Route, Redirect } from 'react-router-dom';\r\n\r\n// Redux imports\r\nimport { useSelector } from 'react-redux';\r\nimport { getIsAuthenticated } from '../../redux/auth/auth-selectors';\r\n\r\n// Helpers imports\r\nimport PropTypes from 'prop-types';\r\n\r\nexport default function PublicRoute({ redirectTo, children, ...routeProps }) {\r\n  const isAuthenticated = useSelector(getIsAuthenticated);\r\n\r\n  return (\r\n    <Route {...routeProps}>\r\n      {isAuthenticated && routeProps.restricted ? (\r\n        <Redirect to={redirectTo} />\r\n      ) : (\r\n        children\r\n      )}\r\n    </Route>\r\n  );\r\n}\r\n\r\nPublicRoute.defaultProps = {\r\n  restricted: true,\r\n};\r\n\r\nPublicRoute.propTypes = {\r\n  redirectTo: PropTypes.string.isRequired,\r\n  children: PropTypes.node,\r\n  routeProps: PropTypes.shape({\r\n    path: PropTypes.string.isRequired,\r\n    restricted: PropTypes.bool,\r\n  }),\r\n};","// React imports\r\nimport React, { Suspense, lazy, useEffect } from 'react';\r\nimport { HashRouter, Route, Switch } from 'react-router-dom';\r\n\r\n// Components imports\r\nimport AppBar from './components/AppBar';\r\n\r\n// Helpers imports\r\nimport Loader from 'react-loader-spinner';\r\nimport 'react-loader-spinner/dist/loader/css/react-spinner-loader.css';\r\n\r\n// Routes imports\r\nimport routes from './routes';\r\nimport PrivateRoute from './components/PrivateRoute';\r\nimport PublicRoute from './components/PublicRoute';\r\n\r\n// Imports from Redux\r\nimport { useDispatch } from 'react-redux';\r\n\r\n// Operations imports\r\nimport { getCurrentUser } from './redux/auth/auth-operations';\r\n\r\n// Lazy imports for views\r\nconst HomePage = lazy(() =>\r\n  import('./views/HomePage' /* webpackChunkName: \"home-page\" */),\r\n);\r\nconst LoginPage = lazy(() =>\r\n  import('./views/LoginPage' /* webpackChunkName: \"login-page\" */),\r\n);\r\nconst RegisterPage = lazy(() =>\r\n  import('./views/RegisterPage' /* webpackChunkName: \"register-page\" */),\r\n);\r\nconst ContactsPage = lazy(() =>\r\n  import('./views/ContactsPage' /* webpackChunkName: \"contacts-page\" */),\r\n);\r\nconst NotFoundPage = lazy(() =>\r\n  import('./views/NotFoundPage' /* webpackChunkName: \"contacts-page\" */),\r\n);\r\n\r\nexport default function App() {\r\n  const dispatch = useDispatch();\r\n\r\n  useEffect(() => {\r\n    dispatch(getCurrentUser());\r\n  }, [dispatch]);\r\n\r\n  return (\r\n    <HashRouter basename='/'>\r\n      <Suspense\r\n        fallback={\r\n          <Loader\r\n            type=\"TailSpin\"\r\n            color=\"#80cbc4\"\r\n            height={80}\r\n            width={80}\r\n            className=\"loader\"\r\n          />\r\n        }\r\n      >\r\n        <AppBar />\r\n        <Switch>\r\n          <Route exact path={routes.home}>\r\n            <HomePage />\r\n          </Route>\r\n\r\n          <PublicRoute\r\n            path={routes.register}\r\n            redirectTo={routes.contacts}\r\n            restricted\r\n          >\r\n            <RegisterPage />\r\n          </PublicRoute>\r\n\r\n          <PublicRoute\r\n            path={routes.login}\r\n            redirectTo={routes.contacts}\r\n            restricted\r\n          >\r\n            <LoginPage />\r\n          </PublicRoute>\r\n\r\n          <PrivateRoute path={routes.contacts} redirectTo={routes.login}>\r\n            <ContactsPage />\r\n          </PrivateRoute>\r\n\r\n          <Route>\r\n            <NotFoundPage />\r\n          </Route>\r\n        </Switch>\r\n      </Suspense>\r\n    </HashRouter>\r\n  );\r\n}","// React imports\r\nimport React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport { BrowserRouter } from 'react-router-dom';\r\n\r\n// Imports from Redux\r\nimport { Provider } from 'react-redux';\r\nimport { store, persistor } from './redux/store';\r\n\r\n// Imports from Redux Persist\r\nimport { PersistGate } from 'redux-persist/integration/react';\r\n\r\n// Components imports\r\nimport App from './App';\r\n\r\n// Styles imports\r\nimport 'modern-normalize/modern-normalize.css';\r\nimport './index.css';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <BrowserRouter>\r\n      <Provider store={store}>\r\n        <PersistGate loading=\"Loading...\" persistor={persistor}>\r\n          <App />\r\n        </PersistGate>\r\n      </Provider>\r\n    </BrowserRouter>\r\n  </React.StrictMode>,\r\n  document.getElementById('root'),\r\n);","// extracted by mini-css-extract-plugin\nmodule.exports = {\"NavLinksList\":\"Navigation_NavLinksList__2dWrz\",\"NavLink\":\"Navigation_NavLink__1P3ga\",\"NavLink-active\":\"Navigation_NavLink-active__2o4Ej\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"NavLinksList\":\"AuthNav_NavLinksList__3Ha2A\",\"NavLink\":\"AuthNav_NavLink__GC-73\",\"NavLink-active\":\"AuthNav_NavLink-active__2UuTL\"};","// Imports of actions\r\nimport {\r\n  registerRequest,\r\n  registerSuccess,\r\n  registerError,\r\n  loginRequest,\r\n  loginSuccess,\r\n  loginError,\r\n  logoutRequest,\r\n  logoutSuccess,\r\n  logoutError,\r\n  getCurrentUserRequest,\r\n  getCurrentUserSuccess,\r\n  getCurrentUserError,\r\n} from './auth-actions';\r\n\r\n// Imports of libraries\r\nimport axios from 'axios';\r\naxios.defaults.baseURL = 'https://goit-phonebook-api.herokuapp.com';\r\n\r\n// Token object with methods to set and uset the token from headers\r\nconst authToken = {\r\n  set(token) {\r\n    axios.defaults.headers.common.Authorization = `Bearer ${token}`;\r\n  },\r\n  unset() {\r\n    axios.defaults.headers.common.Authorization = '';\r\n  },\r\n};\r\n\r\n// Function to register a new user\r\nconst registerUser = user => async dispatch => {\r\n  dispatch(registerRequest());\r\n\r\n  try {\r\n    const response = await axios.post('/users/signup', user);\r\n\r\n    authToken.set(response.data.token);\r\n    dispatch(registerSuccess(response.data));\r\n  } catch (error) {\r\n    dispatch(registerError(error.message));\r\n  }\r\n};\r\n\r\n// Function to login an existing user\r\nconst loginUser = user => async dispatch => {\r\n  dispatch(loginRequest());\r\n\r\n  try {\r\n    const response = await axios.post('/users/login', user);\r\n\r\n    authToken.set(response.data.token);\r\n    dispatch(loginSuccess(response.data));\r\n  } catch (error) {\r\n    dispatch(loginError(error.message));\r\n  }\r\n};\r\n\r\n// Function to log out user\r\nconst logoutUser = () => async dispatch => {\r\n  dispatch(logoutRequest());\r\n\r\n  try {\r\n    await axios.post('/users/logout');\r\n    authToken.unset();\r\n    dispatch(logoutSuccess());\r\n  } catch (error) {\r\n    dispatch(logoutError(error.message));\r\n  }\r\n};\r\n\r\n// Function to get current user status\r\nconst getCurrentUser = () => async (dispatch, getState) => {\r\n  const {\r\n    auth: { token },\r\n  } = getState();\r\n\r\n  if (!token) {\r\n    return;\r\n  }\r\n\r\n  authToken.set(token);\r\n  dispatch(getCurrentUserRequest());\r\n\r\n  try {\r\n    const response = await axios.get('/users/current');\r\n\r\n    dispatch(getCurrentUserSuccess(response.data));\r\n  } catch (error) {\r\n    dispatch(getCurrentUserError(error.message));\r\n  }\r\n};\r\n\r\nexport { registerUser, loginUser, logoutUser, getCurrentUser };","// extracted by mini-css-extract-plugin\nmodule.exports = {\"UserMenu\":\"UserMenu_UserMenu__2wzSn\",\"logoutbutton\":\"UserMenu_logoutbutton__1t1C_\"};","// React imports\r\nimport React from 'react';\r\n\r\n// Helpers imports\r\nimport PropTypes from 'prop-types';\r\n\r\n// Styles imports\r\nimport styles from './Container.module.css';\r\n\r\nconst Container = ({ children }) => (\r\n  <div className={styles.container}>{children}</div>\r\n);\r\n\r\nContainer.propTypes = {\r\n  children: PropTypes.node,\r\n};\r\n\r\nexport default Container;","// Imports from Redux Toolkit\r\nimport { createAction } from '@reduxjs/toolkit';\r\n\r\nconst registerRequest = createAction('auth/registerRequest');\r\nconst registerSuccess = createAction('auth/registerSuccess');\r\nconst registerError = createAction('auth/registerError');\r\n\r\nconst loginRequest = createAction('auth/loginRequest');\r\nconst loginSuccess = createAction('auth/loginSuccess');\r\nconst loginError = createAction('auth/loginError');\r\n\r\nconst logoutRequest = createAction('auth/logoutRequest');\r\nconst logoutSuccess = createAction('auth/logoutSuccess');\r\nconst logoutError = createAction('auth/logoutError');\r\n\r\nconst getCurrentUserRequest = createAction('auth/getCurrentUserRequest');\r\nconst getCurrentUserSuccess = createAction('auth/getCurrentUserSuccess');\r\nconst getCurrentUserError = createAction('auth/getCurrentUserError');\r\n\r\nexport {\r\n  registerRequest,\r\n  registerSuccess,\r\n  registerError,\r\n  logoutRequest,\r\n  logoutSuccess,\r\n  logoutError,\r\n  loginRequest,\r\n  loginSuccess,\r\n  loginError,\r\n  getCurrentUserRequest,\r\n  getCurrentUserSuccess,\r\n  getCurrentUserError,\r\n};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Container_container__25dqD\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"logo\":\"Logo_logo__zz1CE\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"AppBar\":\"AppBar_AppBar__XQ_Ba\"};","// Imports from Redux Toolkit\r\nimport { createAction } from '@reduxjs/toolkit';\r\n\r\n// Actions for HTTP requests\r\nconst fetchContactsRequest = createAction('contacts/fetchContactsRequest');\r\nconst fetchContactsSuccess = createAction('contacts/fetchContactsSuccess');\r\nconst fetchContactsError = createAction('contacts/fetchContactsError');\r\n\r\nconst addContactRequest = createAction('contacts/addContactRequest');\r\nconst addContactSuccess = createAction('contacts/addContactSuccess');\r\nconst addContactError = createAction('contacts/addContactError');\r\n\r\nconst deleteContactRequest = createAction('contacts/deleteContactRequest');\r\nconst deleteContactSuccess = createAction('contacts/deleteContactSuccess');\r\nconst deleteContactError = createAction('contacts/deleteContactError');\r\n\r\nconst updateContactRequest = createAction('contacts/updateContactRequest');\r\nconst updateContactSuccess = createAction('contacts/updateContactSuccess');\r\nconst updateContactError = createAction('contacts/updateContactError');\r\n\r\n// Action to update filter\r\nconst updateFilter = createAction('phonebook/updateFilter');\r\n\r\nexport {\r\n  fetchContactsRequest,\r\n  fetchContactsSuccess,\r\n  fetchContactsError,\r\n  addContactRequest,\r\n  addContactSuccess,\r\n  addContactError,\r\n  deleteContactRequest,\r\n  deleteContactSuccess,\r\n  deleteContactError,\r\n  updateContactRequest,\r\n  updateContactSuccess,\r\n  updateContactError,\r\n  updateFilter,\r\n};"],"sourceRoot":""}