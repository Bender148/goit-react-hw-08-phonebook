{"version":3,"sources":["components/Main/Main.js","components/Section/Section.js","components/Section/Section.module.css","components/PageTitle/PageTitle.module.css","components/PageTitle/PageTitle.js","components/Title/Title.module.css","components/ContactForm/ContactForm.module.css","components/Filter/Filter.module.css","components/ContactList/ContactList.module.css","views/NotFoundPage.js","components/Title/Title.js","redux/contacts/contacts-selectors.js","components/ContactForm/ContactForm.js","redux/contacts/contacts-operations.js","components/Filter/Filter.js","components/ContactList/ContactList.js","views/ContactsPage.js"],"names":["Main","children","Section","className","styles","section","Container","module","exports","PageTitle","title","defaultProps","NotFoundPage","Title","getFilterValue","state","contacts","filter","getAllContacts","items","getFilteredItems","createSelector","name","number","toLowerCase","includes","toLocaleLowerCase","getLoading","loading","ContactForm","handleInputChange","event","currentTarget","value","setState","handleSubmit","preventDefault","props","submitHandler","existingContact","find","contact","alert","trim","reset","form","onSubmit","this","type","onChange","required","btn","Component","connect","dispatch","a","addContactRequest","axios","post","data","addContactSuccess","addContactError","message","addContact","Filter","filterValue","filterUpdate","autoComplete","updateFilter","target","ContactList","fetchContacts","filtered","onDeleteContact","isLoading","loaderConfig","color","height","width","loader","_","isEmpty","map","id","item","onClick","notification","contactId","deleteContactRequest","delete","deleteContactSuccess","deleteContactError","deleteContact","fetchContactsRequest","get","fetchContactsSuccess","fetchContactsError","ContactsPage"],"mappings":"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","file":"static/js/contacts-page.6f0562cb.chunk.js","sourcesContent":["// Imports from React\r\nimport React from 'react';\r\n\r\n// Imports of helpers\r\nimport PropTypes from 'prop-types';\r\n\r\nconst Main = ({ children }) => {\r\n  return <main>{children}</main>;\r\n};\r\n\r\nMain.propTypes = {\r\n  children: PropTypes.node,\r\n};\r\n\r\nexport default Main;","// Imports from React\r\nimport React from 'react';\r\n// Imports of helpers\r\nimport PropTypes from 'prop-types';\r\n\r\nimport Container from '../Container';\r\n// Styles imports\r\nimport styles from './Section.module.css';\r\n\r\nconst Section = ({ children }) => {\r\n  return (\r\n    <section className={styles.section}>\r\n      <Container>{children}</Container>\r\n    </section>\r\n  );\r\n};\r\n\r\nSection.propTypes = {\r\n  children: PropTypes.node,\r\n};\r\n\r\nexport default Section;","// extracted by mini-css-extract-plugin\nmodule.exports = {\"section\":\"Section_section__2-N-o\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"title\":\"PageTitle_title__3Twq4\"};","// Imports from React\r\nimport React from 'react';\r\n// Imports of helpers\r\nimport PropTypes from 'prop-types';\r\n// Styles imports\r\nimport styles from './PageTitle.module.css';\r\n\r\nconst PageTitle = ({ title }) => {\r\n  return title && <h1 className={styles.title}>{title}</h1>;\r\n};\r\n\r\nPageTitle.defaultProps = {\r\n  title: '',\r\n};\r\n\r\nPageTitle.propTypes = {\r\n  title: PropTypes.string,\r\n};\r\n\r\nexport default PageTitle;","// extracted by mini-css-extract-plugin\nmodule.exports = {\"title\":\"Title_title__Sa2En\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"ContactForm_form__ev9MJ\",\"btn\":\"ContactForm_btn__344FQ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"filter\":\"Filter_filter__3THfh\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"contacts\":\"ContactList_contacts__3ZJR8\",\"item\":\"ContactList_item__fhxY4\",\"btn\":\"ContactList_btn__3D67L\",\"notification\":\"ContactList_notification__nrf8V\"};","// Imports from React\r\nimport React from 'react';\r\n// Imports of components\r\nimport Main from '../components/Main';\r\nimport Section from '../components/Section';\r\nimport PageTitle from '../components/PageTitle';\r\n\r\nconst NotFoundPage = () => {\r\n  return (\r\n    <Main>\r\n      <Section>\r\n        <PageTitle title=\"404 Page not Found\" />\r\n      </Section>\r\n    </Main>\r\n  );\r\n};\r\n\r\nexport default NotFoundPage;","// Imports from React\r\nimport React from 'react';\r\n// Imports of helpers\r\nimport PropTypes from 'prop-types';\r\n// Styles imports\r\nimport styles from './Title.module.css';\r\n\r\nconst Title = ({ title }) => {\r\n  return title && <h2 className={styles.title}>{title}</h2>;\r\n};\r\n\r\nTitle.defaultProps = {\r\n  title: '',\r\n};\r\n\r\nTitle.propTypes = {\r\n  title: PropTypes.string,\r\n};\r\n\r\nexport default Title;","import { createSelector } from '@reduxjs/toolkit';\r\n\r\nconst getFilterValue = state => state.contacts.filter;\r\n\r\nconst getAllContacts = state => state.contacts.items;\r\n\r\nconst getFilteredItems = createSelector(\r\n  [getAllContacts, getFilterValue],\r\n  (items, filter) =>\r\n    items.filter(\r\n      ({ name, number }) =>\r\n        name.toLowerCase().includes(filter.toLocaleLowerCase()) ||\r\n        number.includes(filter),\r\n    ),\r\n);\r\n\r\nconst getLoading = state => state.contacts.loading;\r\n\r\nexport { getFilterValue, getAllContacts, getFilteredItems, getLoading };","// Imports from React\r\nimport React, { Component } from 'react';\r\n// Imports from Redux\r\nimport { connect } from 'react-redux';\r\nimport { addContact } from '../../redux/contacts/contacts-operations';\r\nimport { getAllContacts } from '../../redux/contacts/contacts-selectors';\r\n// Helpers imports\r\nimport PropTypes from 'prop-types';\r\n// Styles imports\r\nimport styles from './ContactForm.module.css';\r\n\r\nclass ContactForm extends Component {\r\n  state = { name: '', number: '' };\r\n\r\n  static propTypes = {\r\n    submitHandler: PropTypes.func.isRequired,\r\n  };\r\n\r\n  handleInputChange = event => {\r\n    const { name, value } = event.currentTarget;\r\n\r\n    this.setState({\r\n      [name]: value,\r\n    });\r\n  };\r\n\r\n  handleSubmit = event => {\r\n    event.preventDefault();\r\n    const { name, number } = this.state;\r\n    const { items, submitHandler } = this.props;\r\n\r\n    if (!name) {\r\n      return;\r\n    }\r\n\r\n    const existingContact = items.find(contact => contact.name === name);\r\n\r\n    if (existingContact) {\r\n      alert(`${existingContact.name} is already in contacts.`);\r\n      return;\r\n    }\r\n\r\n    const newContact = { name: name.trim(), number: number.trim() };\r\n\r\n    submitHandler(newContact);\r\n\r\n    this.reset();\r\n  };\r\n\r\n  reset = () => {\r\n    this.setState({ name: '', number: '' });\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <form className={styles.form} onSubmit={this.handleSubmit}>\r\n        <label>\r\n          Name\r\n          <input\r\n            type=\"name\"\r\n            name=\"name\"\r\n            value={this.state.name}\r\n            onChange={this.handleInputChange}\r\n            required\r\n          />\r\n        </label>\r\n        <label>\r\n          Number\r\n          <input\r\n            type=\"tel\"\r\n            name=\"number\"\r\n            value={this.state.number}\r\n            onChange={this.handleInputChange}\r\n            required\r\n          />\r\n        </label>\r\n        <button type=\"submit\" className={styles.btn}>\r\n          Add\r\n        </button>\r\n      </form>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n  items: getAllContacts(state),\r\n});\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n  submitHandler: contact => dispatch(addContact(contact)),\r\n});\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(ContactForm);","// Imports of actions\r\nimport {\r\n  fetchContactsRequest,\r\n  fetchContactsSuccess,\r\n  fetchContactsError,\r\n  addContactRequest,\r\n  addContactSuccess,\r\n  addContactError,\r\n  deleteContactRequest,\r\n  deleteContactSuccess,\r\n  deleteContactError,\r\n} from './contacts-actions';\r\n// Imports of libraries\r\nimport axios from 'axios';\r\n// axios.defaults.baseURL = 'https://goit-phonebook-api.herokuapp.com';\r\n\r\nconst fetchContacts = () => async dispatch => {\r\n  dispatch(fetchContactsRequest());\r\n\r\n  try {\r\n    const { data } = await axios.get('/contacts');\r\n    dispatch(fetchContactsSuccess(data));\r\n  } catch (error) {\r\n    dispatch(fetchContactsError(error.message));\r\n  }\r\n};\r\n\r\nconst addContact = contact => async dispatch => {\r\n  dispatch(addContactRequest());\r\n\r\n  try {\r\n    const { data } = await axios.post('/contacts', contact);\r\n    dispatch(addContactSuccess(data));\r\n  } catch (error) {\r\n    dispatch(addContactError(error.message));\r\n  }\r\n};\r\n\r\nconst deleteContact = contactId => async dispatch => {\r\n  dispatch(deleteContactRequest());\r\n\r\n  try {\r\n    await axios.delete(`/contacts/${contactId}`);\r\n    dispatch(deleteContactSuccess(contactId));\r\n  } catch (error) {\r\n    dispatch(deleteContactError(error.message));\r\n  }\r\n};\r\n\r\nexport { fetchContacts, addContact, deleteContact };","// Imports from React\r\nimport React from 'react';\r\n// Imports from Redux\r\nimport { connect } from 'react-redux';\r\nimport { updateFilter } from '../../redux/contacts/contacts-actions';\r\nimport { getFilterValue } from '../../redux/contacts/contacts-selectors';\r\n// Imports of helpers\r\nimport PropTypes from 'prop-types';\r\n// Styles imports\r\nimport styles from './Filter.module.css';\r\n\r\nconst Filter = ({ filterValue, filterUpdate }) => {\r\n  return (\r\n    <div className={styles.filter}>\r\n      <label>\r\n        Find contacts by name\r\n        <input\r\n          type=\"text\"\r\n          name=\"filter\"\r\n          value={filterValue}\r\n          onChange={filterUpdate}\r\n          autoComplete=\"off\"\r\n          required\r\n        />\r\n      </label>\r\n    </div>\r\n  );\r\n};\r\n\r\nFilter.defaultProps = {\r\n  filterValue: '',\r\n};\r\n\r\nFilter.propTypes = {\r\n  filterValue: PropTypes.string,\r\n  filterUpdate: PropTypes.func.isRequired,\r\n};\r\n\r\nconst mapStateToProps = state => ({\r\n  filterValue: getFilterValue(state),\r\n});\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n  filterUpdate: event => dispatch(updateFilter(event.target.value)),\r\n});\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Filter);","// Imports from React\r\nimport React, { Component } from 'react';\r\n// Imports from Redux\r\nimport { connect } from 'react-redux';\r\nimport {\r\n  fetchContacts,\r\n  deleteContact,\r\n} from '../../redux/contacts/contacts-operations';\r\nimport {\r\n  getFilteredItems,\r\n  getLoading,\r\n} from '../../redux/contacts/contacts-selectors';\r\n// Imports of helpers\r\nimport PropTypes from 'prop-types';\r\nimport _ from 'lodash';\r\nimport Loader from 'react-loader-spinner';\r\nimport 'react-loader-spinner/dist/loader/css/react-spinner-loader.css';\r\n// Styles imports\r\nimport styles from './ContactList.module.css';\r\n\r\nclass ContactList extends Component {\r\n  static propTypes = {\r\n    filtered: PropTypes.arrayOf(\r\n      PropTypes.shape({\r\n        id: PropTypes.string.isRequired,\r\n        name: PropTypes.string.isRequired,\r\n        number: PropTypes.string.isRequired,\r\n      }).isRequired,\r\n    ).isRequired,\r\n    onDeleteContact: PropTypes.func.isRequired,\r\n  };\r\n\r\n  componentDidMount() {\r\n    this.props.fetchContacts();\r\n  }\r\n\r\n  render() {\r\n    const { filtered, onDeleteContact, isLoading } = this.props;\r\n    const loaderConfig = {\r\n      type: 'TailSpin',\r\n      color: '#80cbc4',\r\n      height: 50,\r\n      width: 50,\r\n      className: styles.loader,\r\n    };\r\n\r\n    return (\r\n      <>\r\n        {isLoading && <Loader {...loaderConfig} />}\r\n\r\n        {!_.isEmpty(filtered) && (\r\n          <ul className={styles.contacts}>\r\n            {filtered.map(({ id, name, number }) => (\r\n              <li key={id} className={styles.item}>\r\n                <div>\r\n                  <p>{name}:</p>\r\n                  <p>{number}</p>\r\n                </div>\r\n\r\n                <button\r\n                  className={styles.btn}\r\n                  onClick={() => {\r\n                    onDeleteContact(id);\r\n                  }}\r\n                >\r\n                  Delete\r\n                </button>\r\n              </li>\r\n            ))}\r\n          </ul>\r\n        )}\r\n\r\n        {_.isEmpty(filtered) && !isLoading && (\r\n          <p className={styles.notification}>No contact found.</p>\r\n        )}\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n  filtered: getFilteredItems(state),\r\n  isLoading: getLoading(state),\r\n});\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n  onDeleteContact: contactId => dispatch(deleteContact(contactId)),\r\n  fetchContacts: () => dispatch(fetchContacts()),\r\n});\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(ContactList);","// Imports from React\r\nimport React from 'react';\r\n// Imports of components\r\nimport Main from '../components/Main';\r\nimport Section from '../components/Section';\r\nimport Title from '../components/Title';\r\nimport ContactForm from '../components/ContactForm';\r\nimport Filter from '../components/Filter';\r\nimport ContactList from '../components/ContactList';\r\n\r\nconst ContactsPage = () => {\r\n  return (\r\n    <Main>\r\n      <Section>\r\n        <Title title=\"Add contacts\" />\r\n        <ContactForm />\r\n        <Title title=\"Find contacts\" />\r\n        <Filter />\r\n        <Title title=\"Contacts\" />\r\n        <ContactList />\r\n      </Section>\r\n    </Main>\r\n  );\r\n};\r\n\r\nexport default ContactsPage;"],"sourceRoot":""}